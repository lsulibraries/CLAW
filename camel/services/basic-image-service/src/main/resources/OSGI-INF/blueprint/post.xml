<?xml version="1.0" encoding="UTF-8"?>

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="
           http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

  <routeContext id="post" xmlns="http://camel.apache.org/schema/blueprint">

    <route id="createBasicImage">
      <description>Creates a basic image in Fedora using Drupal data</description>
      <from uri="direct:createBasicImage"/>
        <setProperty propertyName="uuid"><simple>${headers.uuid}</simple></setProperty>
        <setProperty propertyName="node"><simple>${headers.node}</simple></setProperty>
        <setProperty propertyName="attachment"><simple>${body}</simple></setProperty>
        <setProperty propertyName="mimetype"><simple>${headers.mimetype}</simple></setProperty>
        <to uri="direct:getCollectionUri"/>
        <to uri="direct:createBasicImageSparql"/>
        <to uri="direct:createBasicImageInFedora"/>
        <to uri="direct:addAsMember"/>
        <log message="property.attachment is ${property.attachment}" loggingLevel="DEBUG"/>
        <filter>
          <simple>${property.attachment}</simple>
          <to uri="direct:upsertBasicImageOBJ"/>
        </filter>
    </route>

    <route id="createBasicImageSparql">
      <description>Creates a SPARQL update query based on a Drupal node</description>
      <from uri="direct:createBasicImageSparql"/>
        <log message="in createBasicImageSparql" loggingLevel="DEBUG" />
        <log message="property.node is ${property.node}" loggingLevel="DEBUG" />
        <setBody><simple>${property.node}</simple></setBody>
        <to uri="islandora:collectionService:nodeToSparql"/>
        <setProperty propertyName="sparql"><simple>${body}</simple></setProperty>
        <log message="sparql is ${property.sparql}" loggingLevel="DEBUG" />
    </route>

    <route id="createBasicImageInFedora">
      <description>Posts a SPARQL update query to Fedora in order to create a resource.</description>
      <from uri="direct:createBasicImageInFedora"/>
        <log message="in createBasicImageInFedora" loggingLevel="DEBUG" />
        <log message="property.sparql is ${property.sparql}" loggingLevel="DEBUG" />
        <removeHeaders pattern="*"/>
        <setHeader headerName="Content-Type"><constant>application/sparql-update</constant></setHeader>
        <setHeader headerName="CamelHttpMethod"><constant>POST</constant></setHeader>
        <setBody><simple>${property.sparql}</simple></setBody>
        <to uri="fcrepo:{{islandora.fcrepo.baseurl}}"/>
        <setProperty propertyName="childUri"><simple>${bodyAs(String)}</simple></setProperty>
        <setProperty propertyName="imageUri"><simple>${property.childUri}/OBJ</simple></setProperty>
        <log message="childUri is ${property.childUri}" loggingLevel="DEBUG" />
        <log message="imageUri is ${property.imageUri}" loggingLevel="DEBUG" />
    </route>

    <route id="upsertBasicImageOBJ">
      <from uri="direct:upsertBasicImageOBJ"/>
        <log message="in upsertBasicImageOBJ" loggingLevel="DEBUG" />
        <setBody><simple>${property.attachment}</simple></setBody>
        <removeHeaders pattern="*"/>
        <setHeader headerName="Content-Type"><simple>${property.mimetype}</simple></setHeader>
        <setHeader headerName="CamelHttpMethod"><constant>PUT</constant></setHeader>
        <recipientList><simple>fcrepo:${property.imageUri}</simple></recipientList>
        <log message="sending Image to ${property.imageUri} with mimetype ${property.mimetype}" loggingLevel="DEBUG" />
    </route>

    <route id="addAsMember">
      <description>Updates the pcdm:hasMember field of a collection with a new member</description>
      <from uri="direct:addAsMember"/>
        <log message="in addAsMember" loggingLevel="DEBUG" />
        <to uri="mustache:templates/addAsMemberOfCollectionSparql.mustache"/>
        <setProperty propertyName="sparql"><simple>${body}</simple></setProperty>
        <setBody><simple>${property.sparql}</simple></setBody>
        <removeHeaders pattern="*"/>
        <setHeader headerName="Content-Type"><constant>application/sparql-update</constant></setHeader>
        <setHeader headerName="CamelHttpMethod"><constant>PATCH</constant></setHeader>
        <recipientList><simple>fcrepo:${property.uri}</simple></recipientList>
        <log message="Patching ${property.uri}" loggingLevel="DEBUG" />
        <log message="Sparql ${property.sparql}" loggingLevel="DEBUG" />
    </route>

  </routeContext>

</blueprint>
